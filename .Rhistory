add2<-function(x,y) {
x+y
}
add2
above <- function(x,n){
use <-x > n
x[use]
}
x<-1:20
n<-12
above(x,12)
above <- function(x,n=10){
use <-x > n
x[use]
}
above
above(x)
columnmean <- function(y){
nc <- ncol(y)
means <- numberic(nc)
for(i in 1:nc) {
means[i] <- mean(y[,i])
}
means
}
mydata
cube<- function(x,n) {}
cube<- function(x,n) { }
cube<- function(x,n) {x^3 }
cube(3)
x<-1:10 if(x<5){x<-0}
f<-function(x){g<-function(y){y+z} x<-4 x+g(x)}
f<- function(x) { g<-function(y) { y+z} z<-4}
f<- function(x) { g<-function(y) { y+z} z<-4}
f<- function(x) { g<-function(y) { y+z} z<-4
x+g(x)}
f<-function(x) {
g<-function(y){
y+z
}
z<-4
x+g(x)
}
z<-10
f(3)
#3+7
x<-5
y<-if(x<3){
NA
}else{
10
}
y
h<-function(x,y=NULL, d=3L){
z<- cbind(x,d)
if(!is.null(y))
z<-z+y
else
z<-z+f
g<-x+y/z
if(d==3L)
return(g)
g<-g+10
g
}
X<-1:10
if(x>5){x<-0}
class(x)
length(x)
x<-1:10
length(x)
if(x>5{x<-0})
if(x>5) {x<-0}
View(my_pois)
dataset_url <- "http://d396qusza40orc.cloudfront.net/rprog%2Fdata%2Fspecdata.zip"
download.file(dataset_url, "rprog-data-specdata.zip")
unzip("rprog-data-specdata.zip")
load.data <-function(path) {
files<-dir(path,pattern = '\\.csv',full.names = TRUE)
tables<- lapply(files,read.csv)
do.call(rbind,tables)}
dfPollutantData <-load.data("specdata")
summary(dfPollutantData)
pollutantmean("specdata", "sulfate", 1:10)
dfPollutantData("specdata", "sulfate", 1:10)
dfPollutantData("specdata","sulfate",1:10)
pollutantmean <- mean(dataset$pollutant, na.rm = TRUE)
pollutantmean <- mean(dfPollutantData$pollutant, na.rm = TRUE)
pollutantmean <- mean(dat[, pollutant], na.rm=T)
pollutantmean <- mean(dfPollutantData[, pollutant], na.rm=T)
pollutantmean <- function(mean(dfPollutantData[, pollutant], na.rm=T))
source('~/Documents/School/Data Science/02 - R Programming/R Working Directory/specdata/polluntantmean.R')
dataset_url <- "http://d396qusza40orc.cloudfront.net/rprog%2Fdata%2Fspecdata.zip"
download.file(dataset_url, "rprog-data-specdata.zip")
unzip("rprog-data-specdata.zip")
load.data <-function(path) {
files<-dir(path,pattern = '\\.csv',full.names = TRUE)
tables<- lapply(files,read.csv)
do.call(rbind,tables)}
dfPollutantData <-load.data("specdata")
pollutantmean <- function mean(dfPollutantData[, pollutant], na.rm=T))
pollutantmean <- mean(dfPollutantData[, pollutant], na.rm=T)
pollutantmean <- function mean(tables[, pollutant], na.rm=T))
pollutantmean <- mean(tables[, pollutant], na.rm=T))
source('~/Documents/School/Data Science/02 - R Programming/R Working Directory/specdata/polluntantmean.R')
View(dfPollutantData)
dataset_url <- "http://d396qusza40orc.cloudfront.net/rprog%2Fdata%2Fspecdata.zip"
download.file(dataset_url, "rprog-data-specdata.zip")
unzip("rprog-data-specdata.zip")
load.data <-function(path) {
files<-dir(path,pattern = '\\.csv',full.names = TRUE)
tables<- lapply(files,read.csv)
dfPolluntantData<- do.call(rbind,tables)
mean(dfPollutantData[, pollutant], na.rm=T)mean}
dfPollutantData <-load.data("specdata")
load.data <-function(path) {
files<-dir(path,pattern = '\\.csv',full.names = TRUE)
tables<- lapply(files,read.csv)
dat <- do.call(rbind, dat_temp)
mean(dat[, pollutant], na.rm=T)}
load.data("specdata", "nitrate", 70:72)
load.data <-function(path) {
files<-dir(path,pattern = '\\.csv',full.names = TRUE)
tables<- lapply(files,function(x) read.csv[[pollutant]])
dat <- do.call(rbind, dat_temp)
mean(dat[, pollutant], na.rm=T)}
load.data("specdata", "nitrate", 70:72)
pollutantmean <- function(directory, pollutant, id = 1:332) {         files_list <- dir(directory, full.names=TRUE)         dat <- lapply(files_list[id], function(x) read.csv(x)[[pollutant]])         mean(unlist(dat), na.rm=T)                       }
pollutantmean <- function(directory, pollutant, id = 1:332) {         files_list <- dir(directory, full.names=TRUE)         dat <- lapply(files_list[id], function(x) read.csv(x)[[pollutant]])         mean(unlist(dat), na.rm=T)                       }
pollutantmean <- function(directory, pollutant, id = 1:332) {
files_list <- dir(directory, full.names=TRUE)
dat <- lapply(files_list[id], function(x) read.csv(x)[[pollutant]])
mean(unlist(dat), na.rm=T)                       }
pollutantmean("specdata", "nitrate", 70:72)
pollutantmean <- function(directory, pollutant, id = 1:332) {
files <- dir(path,pattern = '\\.csv', full.names=TRUE)
dat <- lapply(files[id], function(x) read.csv(x)[[pollutant]])
mean(unlist(dat), na.rm=T)                       }
pollutantmean("specdata", "nitrate", 70:72)
pollutantmean <- function(directory, pollutant, id = 1:332) {
files <- dir(directory,pattern = '\\.csv', full.names=TRUE)
dat <- lapply(files[id], function(x) read.csv(x)[[pollutant]])
mean(unlist(dat), na.rm=T)                       }
pollutantmean("specdata", "nitrate", 70:72)
pollutantmean <- function(directory, pollutant, id = 1:332) {
files <- dir(directory,pattern = '\\.csv', full.names=TRUE)
dfPollutantData <- lapply(files[id], function(x) read.csv(x)[[pollutant]])
mean(unlist(dfPollutantData), na.rm=T)                       }
pollutantmean("specdata", "nitrate", 70:72)
dataset_url <- "http://d396qusza40orc.cloudfront.net/rprog%2Fdata%2Fspecdata.zip"
download.file(dataset_url, "rprog-data-specdata.zip")
unzip("rprog-data-specdata.zip")
pollutantmean <- function(directory, pollutant, id = 1:332) {
files <- dir(directory,pattern = '\\.csv', full.names=TRUE)
dfPollutantData <- lapply(files[id], function(x) read.csv(x)[[pollutant]])
mean(unlist(dfPollutantData), na.rm=T)                       }
pollutantmean("specdata", "nitrate", 23)
source('~/Documents/School/Data Science/02 - R Programming/R Working Directory/specdata/polluntantmean.R')
source('~/Documents/School/Data Science/02 - R Programming/R Working Directory/specdata/polluntantmean.R')
dataset_url <- "http://d396qusza40orc.cloudfront.net/rprog%2Fdata%2Fspecdata.zip"
download.file(dataset_url, "rprog-data-specdata.zip")
unzip("rprog-data-specdata.zip")
files <- dir(directory,pattern = '\\.csv', full.names=TRUE)
dfPollutantData <- lapply(files[id], function(x) read.csv(x)[[pollutant]])
pollutantmean <- function(directory, pollutant, id = 1:332) {
mean(unlist(dfPollutantData), na.rm=T)
}
pollutantmean("specdata", "nitrate", 23)
library(swirl)
rm(list=ls())
swirl()
my_vector <-1:20
my_vector
dim(my_vector)
length(my_vector)
dim(my_vector) <- c(4,5)
dim(my_vector)
attributes(my_vector)
my_vector
class(my_vector)
my_matrix <-my_vector
?matrix
my_matrix2 <- Matrix(data = 1:20,nrow = 4, ncol = 5)
my_matrix2 <- matrix(data = 1:20,nrow = 4, ncol = 5)
identical(my_matrix,my_matrix2)
patients <- character("Bill", "Gina", "Kelly", "Sean")
?character
patients <-as.character(Bill, Gina, Kelly, Sean)
patients <-as.character("Bill", "Gina", "Kelly", "Sean")
patients <- as.character("Bill", "Gina", "Kelly", "Sean")
info()
patients <-character(length=4)
skip()
cbind(my_matrix,patients)
cbind(patients, my_matrix)
my_data <-data.frame(patients, my_matrix)
my_data
class(my_data)
cnames <- c("patient", "age", "weight", "bp", "rating",
| "test")
cnames <- c("patient", "age", "weight", "bp", "rating","test")
?colnames
colnames(my_data) <-cnames
my_data
head(flags)
dim(flags)
viewinfo(flags)
class(flags)
cls_list <- lapply(flags, class)
cls_list
class(cls_list)
as.character(cls_list)
cls_vect<- sapply(flags, class)
cls_vct
cls_vect
class(cls_vect)
sum(flags$orange)
flag_colors <- flags[,11:17]
head(flag_colors)
lapply(flag_colors, sum(, 1:7))
lapply(flag_colors, sum[,1:7])
lapply(flag_colors, sum[, 1:7])
lapply(flag_colors,sum)
aapply(flag_colors,sum)
sapply(flag_colors,sum)
sapply(flag_colors,mean)
flag_shapes<- flags[,19:23]
lapply(flag_shapes,range)
sapply(flag_shapes,range)
shape_mat <-sapply(flag_shapes,range)
shape_mat
class(shape_mat)
unique(c(3,4,5,5,5,6,6))
unique_vals <- lapply(flags, unique)
unique_vals
?length
lapply(unique_vals,length)
sapply(unique_vals,length)
sapply(flags,unique)
| lapply(unique_vals, function(elem) elem[2])
lapply(unique_vals, function(elem) elem[2])
sapply(flags,unique)
vapply(flags, unique, numeric(1))
ok()
sapply(flags,class)
vapply(flags, class, character(1))
?tapply
table(flags$landmass)
table(flags$animate)
tapply(flags$animate, flags$landmass, mean)
tapply(flags$population,flags$red, summary)
tapply(flags$population,flags$landmasses, summary)
tapply(flags$population,flags$landmasses, summary)
tapply(flags$population,flags$landmasses, summary)
skip()
quit()
swirl()
TRUE == TRUE
(FALSE == TRUE) == TRUE
(FALSE == TRUE) == TRUE
(FALSE == TRUE) == FALSE
6 == 7
6 == >7
6<7
10 <= 10
5 != 7
(5 != 7) == !FALSE
!(5 == 7)
FALSE & FALSE
TRUE & c(TRUE, FALSE, FALSE).
TRUE & c(TRUE, FALSE, FALSE)
TRUE && c(TRUE, FALSE, FALSE)
TRUE | c(TRUE, FALSE, FALSE)
TRUE || c(TRUE, FALSE, FALSE)
5 > 8 || 6 != 8 && 4 > 3.9
library(swirl)
swirl()
isTRUE(6>4)
identical('twins','twins')
xor(5==6, !FALSE)
ints <-sample(10)
ints
ints >5
which(ints,7)
which(c(ints,7))
which(ints, >7)
which(ints, "> 7")
?which
which(>7)
which(ints > 7)
any(x <0)
any(ints<0)
all(ints>0)
ls()
class(plants)
dim(plants)
nrow(plants)
ncol(plants)
object.size(plants)
names(plants)
head(plants)
head(plants,10)
tail(plants,15)
summary(plants)
table(plants$Active_Growth_Period)
str(plants)
$git clone https://github.com/asn6464/ProgrammingAssignment2.git
git clone https://github.com/asn6464/ProgrammingAssignment2.git
library(git)
setwd("~/Downloads/ProgrammingAssignment2")
ls()
ls()
dir()
